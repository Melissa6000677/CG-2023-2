<!DOCTYPE html>
<html>

<head>
    <title>Primera Escena con Three.js</title>

    <style>
        body {
            /* configurar margin a 0 y overflow a hidden, para ocupar pantalla completa */
            margin: 0;
            overfLow: hidden;
        }
    </style>
</head>

<body>

    <!-- Div que contendra la salida -->
    <div id="WebGL-salida">
    </div>

    <!-- ERROR = No existen las librerias
        <script type="text/javascript" src="three.js"></script>
        <script type="text/javascript" src="jquery-1.9.0.js"></script> -->

    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <script src="https://code.jquery.com/jquery-1.9.0.min.js"
        integrity="sha256-f6DVw/U4x2+HjgEqw5BZf67Kq/5vudRZuRkljnbF344=" crossorigin="anonymous"></script>

    <!-- ERROR = Mala escritura del script
    <script type="text/javascript" -->

    <script>

        // Una vez que todo ha sido cargado, ejecutamos nuestro contenido Three.js.
        $(function () {

            // ERROR = Esta mal creada la escena
            //var scene THREE.Scene();
            var scene = new THREE.Scene();

            // Creamos una camera, que define desde donde vamos a mirar.
            var camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);

            // Creamos un render y configuramos el tamaño
            var renderer = new THREE.WebGLRenderer();

            renderer.setSize(window.innerWidth, window.innerHeight);

            var axes = new THREE.AxisHelper(20);
            scene.add(axes);

            // Creamos el plano del suelo
            var planeGeometry = new THREE.PlaneGeometry(60, 20);

            // ERROR = Color mal escrito
            // var planeMaterial = new THREE.MeshBasicMaterial({ color: excccccc });
            var planeMaterial = new THREE.MeshBasicMaterial({ color: 0x33ffd5 });

            var plane = new THREE.Mesh(planeGeometry, planeMaterial);


            // ERROR = Se escribe Math no Moth
            // plane.rotation.x = -0.5 * Moth.PI;
            plane.rotation.x = -0.5 * Math.PI;

            plane.position.x = 15
            plane.position.y = 0
            plane.position.z = 0

            // Añadimos el plano a la escena
            scene.add(plane);

            // ERROR = Se escribe Box no Cube
            // var cubeGeometry = new THREE.CubeGeometry(4, 4, 4);
            var cubeGeometry = new THREE.BoxGeometry(4, 4, 4);

            // ERROR = Parentesis de mas y mala escritura del material 
            // var cubeMaterial = new THREE.MesheasicMaterial((color: 0xff0000, wireframe: true));
            var cubeMaterial = new THREE.MeshBasicMaterial({ color: 0xff0000, wireframe: true });

            var cube = new THREE.Mesh(cubeGeometry, cubeMaterial);

            // Posicionamos el cubo
            cube.position.x = -4;
            cube.position.y = 3;
            cube.position.z = 0;

            // Añadimos el cubo a la escena
            scene.add(cube);

            // Creamos una esfera
            var sphereGeometry = new THREE.SphereGeometry(4, 20, 20);
            var sphereMaterial = new THREE.MeshBasicMaterial({ color: 0x7777ff, wireframe: true });

            // ERROR = Falta un new antes del THREE
            //var sphere = THREE.Mesh(sphereGeometry, sphereMaterial);
            var sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);

            // Posicionamos la esfera
            sphere.position.x = 20;
            sphere.position.y = 4;
            sphere.position.z = 2;

            // Añadimos la esfera a la escena
            scene.add(sphere);

            // Posiciona y apunta la camara al centro de la escena
            camera.position.x = -30;
            camera.position.y = 40;
            camera.position.z = 30;
            camera.lookAt(scene.position);

            // Añadir la salida de la renderizacion al elemento html
            $("#WebGL-salida").append(renderer.domElement);

            // Renderizar la escena
            renderer.render(scene, camera);
        });


    </script>
</body>

</html>